These are quick install instructions mainly intended for UNIX-like systems
(including Linux, OS X, AIX, Cygwin and MSys). Additional details for building
this and other COIN projects are available at

  https://projects.coin-or.org/BuildTools

You can find instructions for building with Microsoft Visual Studio under
Windows at

  https://projects.coin-or.org/MSVisualStudio

**********************************************************************
***                         DOWNLOAD                               ***
**********************************************************************

BLIS has been packaged for some Linux distributions and is in the
process of being packaged for Homebrew on OS X. For Windows, pre-built
binaries are available as part of the COIN-OR Optimization Suite:

https://www.coin-or.org/download/binary/OptimizationSuite/

If you would like to build from source, you can obtain the source code for
BLIS in two ways:

1. Obtain the source directly from the COIN-OR subversion repository
   (recommended). For this, you need a subversion client installed. For a
   command-line client, check out the code with

   svn co https://projects.coin-or.org/svn/CHiPPS/Blis/stable/0.94 Blis-0.94

2. Download the source in a compressed file from from
   http://www.coin-or.org/download/source/Blis and
   extract it, for example, with

   tar -xzvf Blis-0.94.0.tgz

   More detailed download instructions can be found at

   https://projects.coin-or.org/CHiPPS

**********************************************************************
*** CONFIGURATION, COMPILE, INSTALLATION (UNIX-LIKE ENVIRONMENTS)  ***
**********************************************************************

1. Serial Solver
----------------

Switch to the directory in which you just downloaded or extracted the source
(e.g., Blis-0.94) and execute the following commands:

  1) ./configure
  2) make
  3) make test
  4) make install 

To run Blis, type

  Blis-0.93/bin/blis -param blis.par

Blis can also read in parameters from command line, for instance

  Blis/bin/blis -Alps_instance p0033.mps
	
You might want to specify other options, in case you don't want to 
use the default choices that configure makes (e.g., compilers). 
Please visit

   https://projects.coin-or.org/BuildTools

and the CHiPPS Trac page

   https://projects.coin-or.org/CHiPPS

for more information.

2. Parallel Solver (MPI as message passing interface) 
-----------------------------------------------------

For configuration and and compilation of the MPI parallel solver, the user has
to specify the location of MPI with options --with-mpi-incdir, --with-mpi-lib,
MPICC, and MPICXX. Switch to the directory that you just downloaded or
extracted (e.g. Blis-0.93) and execute the following commands (substituting the
correct paths and command names).

  1) ./configure --enable-static --disable-shared --with-mpi-incdir=/usr/local/mpich/include --with-mpi-lib='-L/usr/local/mpich/lib  -lmpich' MPICC=mpicc MPICXX=mpiCC
  2) make 
  3) make install

Note for MPICH2, you might need add CXXDEFS="-DMPICH_IGNORE_CXX_SEEK" in configure options.

The above three steps will create an executable that you can run as follows

  mpirun -np 8 -machinefile machines BUILDDIR/bin/blis -par blis.par

Besides setting parameters in blis.par, you can also set parameters on the 
command line, which overrides the parameter values in blis.par:

  mpirun -np 8 -machinefile machines ./blis -par blis.par -Alps_instance p0033.mps -Alps_hubNum 2

You might want to specify other configuration options, in case you don't want
to use the default choices that configure makes (e.g., compilers). Please
visit

   https://projects.coin-or.org/BuildTools

and the COPS Trac page

   https://projects.coin-or.org/CHiPPS

for more information.

3. Building Examples
--------------------

To build the example code (VRP), configure and build as above. Switch
into the appropriate subdirectory in the source distribution and type "make".

**********************************************************************
***      CONFIGURATION, COMPILE, INSTALLATION (MS Visual C++)      ***
**********************************************************************

MSVC++ project and solution files are provided for all libraries and example
codes. Simply open the files corresponding to the project you wish to build
and build it.
